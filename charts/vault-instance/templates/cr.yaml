apiVersion: "vault.banzaicloud.com/v1alpha1"
kind: "Vault"
metadata:
  name: "vault"
spec:
  size: {{ .Values.size }}
  image: {{ .Values.image }}
  bankVaultsImage: {{ .Values.bankVaultsImage }}

{{- with .Values.annotations }}
  # Common annotations for all created resources
  annotations:
    {{- toYaml . | nindent 4 }}
{{- end }}

{{- with .Values.resources }}
  resources:
    {{- toYaml . | nindent 4 }}
{{- end }}

{{- with .Values.vaultAnnotations }}
  # Vault Pods , Services and TLS Secret annotations
  vaultAnnotations:
    {{- toYaml . | nindent 4 }}
{{- end }}

{{- with .Values.vaultConfigurerAnnotations }}
  # Vault Configurer Pods and Services annotations
  vaultConfigurerAnnotations:
    {{- toYaml . | nindent 4 }}
{{- end }}

  vaultContainerSpec:
    name: {{ .Values.vaultContainerSpec.name | default "vault" }}
    {{- with .Values.vaultContainerSpec.livenessProbe }}
    livenessProbe:
      # httpGet:
      #   scheme: {{ .Values.tls.enabled | ternary "HTTPS" "HTTP" }}
      #   path: /v1/sys/init
      #   port: vault
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- with .Values.vaultContainerSpec.readinessProbe }}
    readinessProbe:
      # httpGet:
      #   scheme: {{ .Values.tls.enabled | ternary "HTTPS" "HTTP" }}
      #   path: /v1/sys/health?standbyok=true&perfstandbyok=true&drsecondarycode=299
      #   port: vault
      {{- toYaml . | nindent 6 }}
    {{- end }}
    # startupProbe:
    #   httpGet:
    #     scheme: {{ .Values.tls.enabled | ternary "HTTPS" "HTTP" }}
    #     path: /v1/sys/init
    #     port: vault
    # {{- with .Values.vaultContainerSpec.startupProbe }}
    #   {{- toYaml . | nindent 6 }}
    # {{- end }}

{{- with .Values.vaultLabels }}
  # Vault Pods, Services and TLS Secret labels
  vaultLabels:
    {{- toYaml . | nindent 4 }}
{{- end }}

{{- with .Values.vaultConfigurerLabels }}
  # Vault Configurer Pods and Services labels
  vaultConfigurerLabels:
    {{- toYaml . | nindent 4 }}
{{- end }}

{{- with .Values.nodeAffinity }}
  # Support for nodeAffinity Rules
  nodeAffinity:
    {{- toYaml . | nindent 4 }}
{{- end }}

{{- with .Values.nodeSelector }}
  # Support for pod nodeSelector rules to control which nodes can be chosen to run
  # the given pods
  nodeSelector:
    {{- toYaml . | nindent 4 }}
{{- end }}

{{- with .Values.tolerations }}
  # Support for node tolerations that work together with node taints to control
  # the pods that can like on a node
  tolerations:
    {{- toYaml . | nindent 4 }}
{{- end }}

  # Specify the ServiceAccount where the Vault Pod and the Bank-Vaults configurer/unsealer is running
  serviceAccount: {{ .Values.serviceAccount }}

  # Specify the Service's type where the Vault Service is exposed
  # Please note that some Ingress controllers like https://github.com/kubernetes/ingress-gce
  # forces you to expose your Service on a NodePort
  serviceType: {{ .Values.serviceType }}

  # Specify existing secret contains TLS certificate (accepted secret type: kubernetes.io/tls)
  # If it is set, generating certificate will be disabled
  # existingTlsSecretName: selfsigned-cert-tls
{{- with .Values.existingTlsSecretName }}
  existingTlsSecretName: '{{ . }}'
{{- end }}

{{- if .Values.ingress.enabled }}
  # Request an Ingress controller with the default configuration
  ingress:
    # Specify Ingress object annotations here, if TLS is enabled (which is by default)
    # the operator will add NGINX, Traefik and HAProxy Ingress compatible annotations
    # to support TLS backends
    annotations:
    {{- if .Values.ingress.annotations }}
      {{- toYaml .Values.ingress.annotations | nindent 6 }}
    {{- end }}

    # Override the default Ingress specification here
    # This follows the same format as the standard Kubernetes Ingress
    # See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#ingressspec-v1beta1-extensions
    spec:
    {{- if .Values.ingress.spec }}
      {{- toYaml .Values.ingress.spec | nindent 6 }}
    {{- end }}
{{- end }}

  # Use local disk to store Vault file data, see config section.
  volumes:
    - name: vault-file
      persistentVolumeClaim:
        claimName: vault-file

  volumeMounts:
    - name: vault-file
      mountPath: /vault/file

  # Support for distributing the generated CA certificate Secret to other namespaces.
  # Define a list of namespaces or use ["*"] for all namespaces.
  caNamespaces:
    - "vswh"

  # Describe where you would like to store the Vault unseal keys and root token.
  unsealConfig:
    options:
      # The preFlightChecks flag enables unseal and root token storage tests
      # This is true by default
      preFlightChecks: true
    kubernetes:
      secretNamespace: {{ .Release.Namespace }}

  # A YAML representation of a final vault config file.
  # See https://www.vaultproject.io/docs/configuration/ for more information.
  config:
    storage:
      file:
        path: "${ .Env.VAULT_STORAGE_FILE }" # An example how Vault config environment interpolation can be used
    listener:
      tcp:
        address: "0.0.0.0:8200"
      {{- if .Values.tls.enabled }}
        tls_cert_file: /vault/tls/server.crt
        tls_key_file: /vault/tls/server.key
      {{- else }}
        tls_disable: true
      {{- end }}
    telemetry:
      statsd_address: localhost:9125
    ui: true

  # See: https://github.com/banzaicloud/bank-vaults#example-external-vault-configuration for more details.
  externalConfig:
    policies:
      - name: allow_secrets
        rules: |-
          path "secret/*" {
            capabilities = ["create", "read", "update", "delete", "list"]
          }
      - name: allow_pki
        rules: |-
          path "pki/*" {
            capabilities = ["create", "read", "update", "delete", "list"]
          }
    auth:
    - roles:
      - bound_service_account_names:
        - {{ default .Release.Namespace .Values.customAuthRole }}
        - vault-secrets-webhook
        - vault
        - kubernetes-external-secrets
        bound_service_account_namespaces:
        - {{ .Release.Namespace }}
        - vswh
        {{- range .Values.auth.namespaces }}
        - {{ . }}
        {{- end }}
        name: {{ default .Release.Namespace .Values.customAuthRole }}
        policies:
        - allow_secrets
        - allow_pki
        ttl: 1h
      type: kubernetes

    secrets:
    - description: General secrets.
      options:
        version: 2
      path: secret
      type: kv
    - config:
        default_lease_ttl: 168h
        max_lease_ttl: 720h
      configuration:
        config:
        {{- $scheme := .Values.tls.enabled | ternary "https" "http" }}
        - crl_distribution_points: {{ $scheme }}://vault.{{ .Release.Namespace }}:8200/v1/pki/crl
          issuing_certificates: {{ $scheme }}://vault.{{ .Release.Namespace }}:8200/v1/pki/ca
          name: urls
        roles:
        - allow_subdomains: true
          allowed_domains: localhost,pod,svc,{{ .Release.Namespace }}
          generate_lease: true
          name: {{ .Release.Namespace }}
          ttl: 1m
        root/generate:
        - common_name: vault.{{ .Release.Namespace }}
          name: internal
      description: Vault PKI Backend
      type: pki

  {{- with .Values.startupSecrets }}
    # Allows writing some secrets to Vault (useful for development purposes).
    # See https://www.vaultproject.io/docs/secrets/kv/index.html for more information.
    startupSecrets:
      {{- toYaml . | nindent 6 }}
  {{- end }}

  vaultEnvsConfig:
    - name: VAULT_LOG_LEVEL
      value: debug
    - name: VAULT_STORAGE_FILE
      value: "/vault/file"

  # Marks presence of Istio, which influences things like port namings
  istioEnabled: {{ .Values.istio.enabled }}
